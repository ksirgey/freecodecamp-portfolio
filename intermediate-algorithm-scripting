//Sum All Numbers in a Range

function sumAll(arr) {
  let sorted = arr.sort(function(a,b) {return a - b});
  let newArr = [];
  for(let i = sorted[0]; i <= sorted[1]; i++) {
    newArr.push(i);
  }
  return newArr.reduce(function(a,b) {
    return a + b;
  })
}
sumAll([1, 4]);
sumAll([10, 5]);


//Diff Two Arrays

function diffArray(arr1, arr2) {
  var newArr = [];
  // Same, same; but different.
  for(let i = 0; i < arr2.length; i++) {
    if (arr1.indexOf(arr2[i]) == -1){
      newArr.push(arr2[i]);
    }
  }
  for(let i = 0; i < arr1.length; i++) {
    if (arr2.indexOf(arr1[i]) == -1){
      newArr.push(arr1[i]);
    }
  }
  return newArr;
}
diffArray([1, 2, 3, 5], [1, 2, 3, 4, 5]);


//Seek and Destroy

function destroyer(arr) {
  // Remove all the values
  let args = Array.prototype.slice.call(arguments);
  let list = arr.slice();
  for (let i = 1; i < args.length; i++) {
    for (let j = list.length-1; j >= 0; j--){
      if (args[i] == list[j]) {
        list.splice(j,1);
      }
    }
  }
  return list;
}
destroyer([1, 2, 3, 1, 2, 3], 2, 3);


//Wherefore Art Thou

function whatIsInAName(collection, source) {

  let srcKeys = Object.keys(source);
  
  return collection.filter(function(obj) {
    for (let i = 0; i < srcKeys.length; i++) {
      if(!obj.hasOwnProperty(srcKeys[i]) || obj[srcKeys[i]] !== source[srcKeys[i]]) {
        return false;
      }
    }
    return true;
  })
}
whatIsInAName([{ first: "Romeo", last: "Montague" }, { first: "Mercutio", last: null }, { first: "Tybalt", last: "Capulet" }], { last: "Capulet" });


//Spinal Tap Case

function spinalCase(str) {
  // "It's such a fine line between stupid, and clever."
  // --David St. Hubbins
  let regex = /\s+|_+/g

  str = str.replace(/([a-z])([A-Z])/g, '$1 $2');

  return str = str.replace(regex, '-').toLowerCase();
}
spinalCase('This Is Spinal Tap');
