//Sum All Numbers in a Range

function sumAll(arr) {
  let sorted = arr.sort(function(a,b) {return a - b});
  let newArr = [];
  for(let i = sorted[0]; i <= sorted[1]; i++) {
    newArr.push(i);
  }
  return newArr.reduce(function(a,b) {
    return a + b;
  })
}
sumAll([1, 4]);
sumAll([10, 5]);


//Diff Two Arrays

function diffArray(arr1, arr2) {
  var newArr = [];
  // Same, same; but different.
  for(let i = 0; i < arr2.length; i++) {
    if (arr1.indexOf(arr2[i]) == -1){
      newArr.push(arr2[i]);
    }
  }
  for(let i = 0; i < arr1.length; i++) {
    if (arr2.indexOf(arr1[i]) == -1){
      newArr.push(arr1[i]);
    }
  }
  return newArr;
}
diffArray([1, 2, 3, 5], [1, 2, 3, 4, 5]);


//Seek and Destroy

function destroyer(arr) {
  // Remove all the values
  let args = Array.prototype.slice.call(arguments);
  let list = arr.slice();
  for (let i = 1; i < args.length; i++) {
    for (let j = list.length-1; j >= 0; j--){
      if (args[i] == list[j]) {
        list.splice(j,1);
      }
    }
  }
  return list;
}
destroyer([1, 2, 3, 1, 2, 3], 2, 3);


//Wherefore Art Thou

function whatIsInAName(collection, source) {

  let srcKeys = Object.keys(source);
  
  return collection.filter(function(obj) {
    for (let i = 0; i < srcKeys.length; i++) {
      if(!obj.hasOwnProperty(srcKeys[i]) || obj[srcKeys[i]] !== source[srcKeys[i]]) {
        return false;
      }
    }
    return true;
  })
}
whatIsInAName([{ first: "Romeo", last: "Montague" }, { first: "Mercutio", last: null }, { first: "Tybalt", last: "Capulet" }], { last: "Capulet" });


//Spinal Tap Case

function spinalCase(str) {
  // "It's such a fine line between stupid, and clever."
  // --David St. Hubbins
  let regex = /\s+|_+/g

  str = str.replace(/([a-z])([A-Z])/g, '$1 $2');

  return str = str.replace(regex, '-').toLowerCase();
}
spinalCase('This Is Spinal Tap');


//Piglatin

function translatePigLatin(str) {
  let regex = /[aeiou]/;
  if (str[0].match(regex)) {
    return str + 'way';
  } else if (str.match(regex) == null) {
    return str + 'ay';
  }
  let vowelStart = str.indexOf(str.match(regex)[0]);

  return str.substr(vowelStart) + str.substr(0,vowelStart) + 'ay';
  
}
translatePigLatin("consonant");


//Search and Replace

function myReplace(str, before, after) {
  let afterUpper = '';
  if (before.charAt(0) === before.charAt(0).toUpperCase()) {
    afterUpper = after.charAt(0).toUpperCase() + after.slice(1);
    console.log(afterUpper);
  } else {
    afterUpper = after;
  }
  
  let arr = str.split(' ');
  for (let i = 0; i < arr.length; i++) {
    if (before == arr[i]) {
      arr.splice(i,1,afterUpper);
    }
  }
  let newStr = arr.join(' ');
  return newStr;
}
myReplace("A quick brown fox jumped over the lazy dog", "jumped", "leaped");


//DNA Pairing

function pairElement(str) {
  let container = [];
  let pairs = [
    ['G','C'], ['A', 'T'], ['C','G'], ['T','A']
    ];

  let arr = str.split('');
  for (let i = 0; i < arr.length; i++) {
    for (let j = 0; j < pairs.length; j++) {
      if (arr[i] == pairs[j][0]) {
        container.push(pairs[j]);
      }
    }
  }

  return container;
}
pairElement("GCG");


//Missing Letters

function fearNotLetter(str) {

  for (let i = 0; i < str.length; i++) {
    let charCode = str.charCodeAt(i);
    if (charCode !== str.charCodeAt(0) + i) {
      return String.fromCharCode(charCode-1);
    } 
  }
  return undefined;
}
fearNotLetter("abce");


//Sorted Union

function uniteUnique(arr) {
let args = arguments;
let container = [];
for (let i = 0; i < args.length; i++) {
  for (let j = 0; j < args[i].length; j++) {
    if (container.indexOf(args[i][j]) == -1) {
      container.push(args[i][j]);
    }
  }
}
  return container;
}
uniteUnique([1, 3, 2], [5, 2, 1, 4], [2, 1]);


//Convert HTML Entities

function convertHTML(str) {
  // &colon;&rpar;
  let arr = [['&', '&amp;'],
              ['<', '&lt;'],
              ['>', '&gt;'],
              ['"', '&quot;'],
              ["'", '&apos;']]
  
  for (let i = 0; i < str.length; i++) {
    for (let j = 0; j < arr.length; j++) {
      if(str.charAt(i) == arr[j][0]) {
        str = str.replace(str.charAt(i), arr[j][1]);
      }
    }
    
  }
  return str;
}
convertHTML("Dolce & Gabbana");
